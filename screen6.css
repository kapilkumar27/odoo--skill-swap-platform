/* General Reset & Fonts */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: 'Inter', sans-serif;
  background-color: #f5f7fa;
  color: #333;
}

/* Header */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 40px;
  background: #fff;
  border-bottom: 1px solid #ddd;
}
.logo {
  font-weight: 600;
  color: #f57c00;
  font-size: 20px;
}
nav {
  display: flex;
  gap: 20px;
  align-items: center;
}
nav a {
  text-decoration: none;
  color: #333;
  font-weight: 500;
}
.avatar {
  width: 36px;
  height: 36px;
  border-radius: 50%;
}

/* Filter bar */
.filter-bar {
  display: flex;
  justify-content: flex-end; /* Keep everything on the right */
  align-items: center;
  gap: 10px; /* Space between elements */
  padding: 20px 40px;
}

.filter-bar input,
.filter-bar select {
  padding: 8px 12px;
  border-radius: 8px;
  border: 1px solid #ccc;
  font-size: 15px;
}

.search-btn {
  background: #00b4d8;
  color: white;
  padding: 8px 16px;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
}


/* Group the search box and button */
.search-group {
  display: flex;
  align-items: center;
}

.search-group input {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.search-group .search-btn {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.filter-bar select,
.filter-bar input {
  padding: 8px 12px;
  border-radius: 8px;
  border: 1px solid #ccc;
  font-size: 15px;
}
.search-btn {
  background: #00b4d8;
  color: white;
  padding: 8px 16px;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
}

/* Cards */
.requests-container {
  padding: 20px 40px;
}

.request-card {
  background: white;
  border-radius: 16px;
  box-shadow: 0 3px 10px rgba(0,0,0,0.05);
  margin-bottom: 20px;
  display: flex;
  justify-content: space-between;
  padding: 20px;
  gap: 20px;
}

/* Left side of card */
.card-left {
  display: flex;
  gap: 20px;
  flex: 1;
}
.profile-pic {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  border: 2px dashed #aaa;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 13px;
  color: #777;
  background: #f0f0f0;
}
.user-info h3 {
  margin-bottom: 10px;
}
.label {
  font-weight: 500;
  color: #666;
}
.tag {
  background: #eee;
  border: none;
  padding: 4px 10px;
  border-radius: 14px;
  font-size: 13px;
  cursor: default;
}
.tag.blue {
  background: #d0ebff;
  color: #005792;
}
.rating {
  margin-top: 10px;
  font-size: 14px;
  color: #444;
}

/* Right side of card */
.card-right {
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: right;
  gap: 10px;
  min-width: 160px;
}
.status {
  font-weight: 600;
}
.status .pending {
  color: orange;
}
.status .rejected {
  color: red;
}
.actions {
  display: flex;
  gap: 10px;
  justify-content: flex-end;
}
.accept-btn,
.reject-btn {
  padding: 6px 12px;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
}
.accept-btn {
  background-color: #4caf50;
  color: white;
}
.reject-btn {
  background-color: #e53935;
  color: white;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  padding: 20px 0;
  gap: 10px;
}

.page-btn {
  padding: 6px 12px;
  border-radius: 6px;
  cursor: pointer;
  background: #eee;
  border: none;
  font-weight: 500;
  color: #333;
  transition: background 0.3s;
}

.page-btn:hover {
  background: #d3f3ff;
}

.page-btn.active {
  background: #00b4d8;
  color: white;
}

.page.active {
  background: #00b4d8;
  color: white;
}

const pageNumbers = document.querySelectorAll(".page-number");
const prevBtn = document.getElementById("prevBtn");
const nextBtn = document.getElementById("nextBtn");

let currentPage = 1;
const totalPages = pageNumbers.length;

function updateActivePage(newPage) {
  pageNumbers.forEach((btn, index) => {
    btn.classList.toggle("active", index + 1 === newPage);
  });
  currentPage = newPage;
}

pageNumbers.forEach((btn, index) => {
  btn.addEventListener("click", () => {
    updateActivePage(index + 1);
    // Future: fetch data for that page
  });
});

prevBtn.addEventListener("click", () => {
  if (currentPage > 1) updateActivePage(currentPage - 1);
});

nextBtn.addEventListener("click", () => {
  if (currentPage < totalPages) updateActivePage(currentPage + 1);
});
